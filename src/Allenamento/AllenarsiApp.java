package Allenamento;

import java.awt.BorderLayout;
import java.awt.datatransfer.DataFlavor;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.SwingConstants;
import javax.swing.TransferHandler;
import robogp.matchmanager.RobotMarker;
import robogp.robodrome.Direction;
import robogp.robodrome.Robodrome;
import robogp.robodrome.Rotation;
import robogp.robodrome.view.RobodromeAnimationObserver;
import robogp.robodrome.view.RobodromeView;


/**
 *
 * @author Sorrentino & Vair
 */

//gestore di eventi per drag&drop che permette il trascinamento del mouse
class DragMouseAdapter extends MouseAdapter {
        public void mousePressed(MouseEvent e) {
            JComponent c = (JComponent) e.getSource();
            if (c.getTransferHandler() != null){
                TransferHandler handler = c.getTransferHandler();
                handler.exportAsDrag(c, e, TransferHandler.COPY);
            } 
        }
}

public class AllenarsiApp extends JFrame implements RobodromeAnimationObserver{
    
    private RobodromeView rv;
    private RobotMarker robot;
    private GestoreProgrammazione theGestore;
    private EseguiAllenamento esecutor; 
    
    private int init_dock;
    private boolean animationReady = false;
    private String type_robodrome;
    
                       
    //Evento per l' eliminazione della scheda nel registro
    private MouseAdapter ma = new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                if (evt.getClickCount() == 2 && !evt.isConsumed() && evt.getSource() instanceof JLabel ) {
                    ((JLabel)evt.getSource()).setIcon(null);
                    //evt.consume();
                }
            }
    };
               
    /**
     * Creates new form AllenarsiApp
     */
    public AllenarsiApp( String type_robodrome, RobotMarker new_robot) {
        this.init_dock = new_robot.getDock();
        initComponents(); //inizializza le componenti della finestra grafica
        initSchede(); //inizializza le schede_istruzioni e i relativi eventi
        initElements(type_robodrome, new_robot); //inizializza gli elementi del gioco (robot-robodromo)
        createRegister(5); //inizializza i 5 registri iniziali
        setBounds(0, 0, 1200, 800); //Stabilisce le dimensioni della finestra quando non Ã¨ fullscreen
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        this.setExtendedState(this.getExtendedState() | JFrame.MAXIMIZED_BOTH);
    };
    
     private void initElements(String type_robodrome, RobotMarker new_robot) {       
        robot = new_robot;
        rv = new RobodromeView(new Robodrome(type_robodrome), 60);
        theGestore = new GestoreProgrammazione();
        rv.put_robot_in_dock(robot);
        rv.addMouseListener(new ClickRobodrome()); //gestore di eventi per i click sul robodromo
        rv.addObserver(this);
        PanelRoboview.setViewportView(rv); //aggiunge robodromeView alla finestra
     }
     
     
    private void createRegister(int n){
        while (n > 0) {
            JLabel nuovo_registro = new JLabel(".", SwingConstants.CENTER); //crea una label invisibile
            JLabel icona_registro = new JLabel(); //la grafica del registro da riempire
            icona_registro.setLayout(new BorderLayout());
            icona_registro.setIcon(new ImageIcon(getClass().getResource("/icons/registro.png")));
            nuovo_registro.setTransferHandler(new ImportTransferHandler()); //setto glie venti per il drag&drop
            nuovo_registro.addMouseListener(ma);
            icona_registro.add(nuovo_registro);
            panel_registri.add(icona_registro);
            panel_registri.validate(); //aggiorno la gui dopo aver aggiunto un nuovo elemento
            panel_registri.repaint();
            PanelRegisters.validate();
            PanelRegisters.repaint();
            theGestore.add_register(nuovo_registro); //aggiungo un nuovo registo al registro di programmazione
            n--;
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        PanelRoboview = new javax.swing.JScrollPane();
        PanelCards = new javax.swing.JPanel();
        label_move_1 = new javax.swing.JLabel();
        label_move_2 = new javax.swing.JLabel();
        label_move_3 = new javax.swing.JLabel();
        label_turn_right = new javax.swing.JLabel();
        label_turn_left = new javax.swing.JLabel();
        label_uturn = new javax.swing.JLabel();
        label_stepback = new javax.swing.JLabel();
        PanelRegisters = new javax.swing.JScrollPane();
        panel_registri = new javax.swing.JPanel();
        pannello_comandi = new javax.swing.JPanel();
        avvia_prg_robot = new javax.swing.JButton();
        add_register = new javax.swing.JButton();
        stop = new javax.swing.JButton();
        pause = new javax.swing.JButton();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        PanelRoboview.setAutoscrolls(true);

        PanelCards.setToolTipText("");

        label_move_1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/card-move1.png"))); // NOI18N

        label_move_2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/card-move2.png"))); // NOI18N

        label_move_3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/card-move3.png"))); // NOI18N

        label_turn_right.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/card-turnL.png"))); // NOI18N

        label_turn_left.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/card-turnR.png"))); // NOI18N

        label_uturn.setBackground(new java.awt.Color(0, 255, 0));
        label_uturn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/card-uturn.png"))); // NOI18N

        label_stepback.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/card-backup.png"))); // NOI18N

        javax.swing.GroupLayout PanelCardsLayout = new javax.swing.GroupLayout(PanelCards);
        PanelCards.setLayout(PanelCardsLayout);
        PanelCardsLayout.setHorizontalGroup(
            PanelCardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelCardsLayout.createSequentialGroup()
                .addGroup(PanelCardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelCardsLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(label_move_3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelCardsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(PanelCardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label_turn_left, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(label_move_1, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelCardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label_stepback)
                    .addComponent(label_move_2)
                    .addComponent(label_turn_right))
                .addGap(0, 15, Short.MAX_VALUE))
            .addGroup(PanelCardsLayout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(label_uturn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelCardsLayout.setVerticalGroup(
            PanelCardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelCardsLayout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addGroup(PanelCardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(label_move_2)
                    .addComponent(label_move_1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelCardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label_move_3)
                    .addComponent(label_stepback))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelCardsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(label_turn_left)
                    .addComponent(label_turn_right))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label_uturn)
                .addContainerGap())
        );

        PanelRegisters.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        panel_registri.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 40, 10));
        PanelRegisters.setViewportView(panel_registri);

        avvia_prg_robot.setText("Avvia");
        avvia_prg_robot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                avvia_prg_robotActionPerformed(evt);
            }
        });

        add_register.setText("+");
        add_register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_registerActionPerformed(evt);
            }
        });

        stop.setText("Esci");
        stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopActionPerformed(evt);
            }
        });

        pause.setText("Pausa");

        javax.swing.GroupLayout pannello_comandiLayout = new javax.swing.GroupLayout(pannello_comandi);
        pannello_comandi.setLayout(pannello_comandiLayout);
        pannello_comandiLayout.setHorizontalGroup(
            pannello_comandiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pannello_comandiLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pannello_comandiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(add_register)
                    .addGroup(pannello_comandiLayout.createSequentialGroup()
                        .addComponent(avvia_prg_robot)
                        .addGap(18, 18, 18)
                        .addComponent(stop, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pause, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pannello_comandiLayout.setVerticalGroup(
            pannello_comandiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pannello_comandiLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(add_register)
                .addGap(18, 18, 18)
                .addGroup(pannello_comandiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(stop, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                    .addComponent(avvia_prg_robot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pause, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(PanelRegisters)
                    .addComponent(PanelRoboview, javax.swing.GroupLayout.DEFAULT_SIZE, 707, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PanelCards, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pannello_comandi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PanelCards, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PanelRoboview))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(PanelRegisters, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                    .addComponent(pannello_comandi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        PanelRoboview.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void avvia_prg_robotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_avvia_prg_robotActionPerformed
        if (!rv.isPlayingAnimation()){
            esecutor = new EseguiAllenamento(robot,rv,theGestore);
            esecutor.start();    
        } 
    }//GEN-LAST:event_avvia_prg_robotActionPerformed

    private void add_registerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_registerActionPerformed
        createRegister(1);
    }//GEN-LAST:event_add_registerActionPerformed

    private void stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopActionPerformed
        this.dispose();
        new setting_allenamento().setVisible(true);
    }//GEN-LAST:event_stopActionPerformed
    
    //assegna ad ogni scheda il rispettivo gestore di eventi
    public void initSchede(){
        label_move_1.addMouseListener(new DragMouseAdapter());
        label_move_1.setTransferHandler(new NoImportTransferHandler());
        
        label_move_2.addMouseListener(new DragMouseAdapter());
        label_move_2.setTransferHandler(new NoImportTransferHandler());
        
        label_move_3.addMouseListener(new DragMouseAdapter());
        label_move_3.setTransferHandler(new NoImportTransferHandler());
        
        label_stepback.addMouseListener(new DragMouseAdapter());
        label_stepback.setTransferHandler(new NoImportTransferHandler());
        
        label_turn_left.addMouseListener(new DragMouseAdapter());
        label_turn_left.setTransferHandler(new NoImportTransferHandler());
        
        label_turn_right.addMouseListener(new DragMouseAdapter());
        label_turn_right.setTransferHandler(new NoImportTransferHandler());
        
        label_uturn.addMouseListener(new DragMouseAdapter());
        label_uturn.setTransferHandler(new NoImportTransferHandler());
    }

    @Override
    public void animationStarted() {
        ;
    }

    @Override
    public void animationFinished() {
        if (!rv.robotVisible(robot)){
            if (this.esecutor == null || this.esecutor.getStatusThread()) //se il robot Ã¨ caduto per click e non perchÃ© fatto cadere dal' esecutore di mosse 
                rv.put_robot_in_dock(robot);
        }
    }
    
    //gestore di eventi per drag&drop su cui non si puo fare il drop
    public class NoImportTransferHandler extends TransferHandler {
        NoImportTransferHandler(){
            super("icon");
        }
        public boolean canImport(JComponent comp, DataFlavor[] transferFlavors){
            return false;
        }
        public boolean canImport(TransferHandler.TransferSupport support){
            return false;
        }
    }
    
    //gestore di eventi per drag&drop che permette e analizza il drop
     public class ImportTransferHandler extends TransferHandler {
        ImportTransferHandler(){
            super("icon");
           
        }
     }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AllenarsiApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AllenarsiApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AllenarsiApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AllenarsiApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RobotMarker robot = new RobotMarker("robot-red", "red");
                robot.assign("Allenamento", 1);
                AllenarsiApp aap = new AllenarsiApp("./robodromes/riskyexchange.txt", robot);
                aap.setVisible(true);
                aap.setExtendedState(aap.getExtendedState() | JFrame.MAXIMIZED_BOTH);
            }
        });
    }
    
    //evento che si attiva al click sul robodromo
    public class ClickRobodrome extends MouseAdapter{        
        public void mouseClicked(MouseEvent e) {
            if (!rv.isPlayingAnimation()) {
                Direction dir = rv.getRobotDirection(robot);
                int robot_y = rv.getRobotRowPos(robot);
                int robot_x = rv.getRobotColPos(robot);
                int newX = rv.xToCol(e.getX());//converte le coordinate in pixel del mouse in num_di_righe
                int newY = rv.yToRow(e.getY());
                if ((robot_x - newX == 0) && (robot_y - newY == 0)){ //se il click era sulla stessa casella del robot
                    rv.addRobotMove(robot, 0, rv.getRobotDirection(robot), Rotation.CW90);
                    rv.play(); //esegue l' animazione di rotazione
                } else {
                    rv.changeRobotPosition(robot, dir,newY, newX, true ); 
                    if ('P' == rv.getTypeCell(newY, newX)){
                        theGestore.cancProg(robot);
                        rv.addRobotFall(robot);
                        rv.play();                                   
                    }
                }
            }
        }
    }
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelCards;
    private javax.swing.JScrollPane PanelRegisters;
    private javax.swing.JScrollPane PanelRoboview;
    private javax.swing.JButton add_register;
    private javax.swing.JButton avvia_prg_robot;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel label_move_1;
    private javax.swing.JLabel label_move_2;
    private javax.swing.JLabel label_move_3;
    private javax.swing.JLabel label_stepback;
    private javax.swing.JLabel label_turn_left;
    private javax.swing.JLabel label_turn_right;
    private javax.swing.JLabel label_uturn;
    private javax.swing.JPanel panel_registri;
    private javax.swing.JPanel pannello_comandi;
    private javax.swing.JButton pause;
    private javax.swing.JButton stop;
    // End of variables declaration//GEN-END:variables

}
